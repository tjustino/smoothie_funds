= form_with(model: @account, class: "box") do |form|
  .content.has-text-centered
    = icon_text("fa-solid fa-book", title)
    hr

  / name
  .field
    = form.label :name, t(".name"), class: "label"
    .control.has-icons-left
      = form.text_field :name, class: input_class_for(@account, :name), placeholder: t(".name")
      span.icon.is-left = icon("fa-solid fa-quote-left")
      - @account.errors.full_messages_for(:name).each do |message|
        p.help.is-danger = message

  / initial balance
  .field
    = form.label :initial_balance, t(".initial_balance"), class: "label"
    .control.has-icons-left
      = form.number_field :initial_balance, class: input_class_for(@account, :initial_balance), placeholder: t(".initial_balance"), step: 0.01
      span.icon.is-left = icon("fa-solid fa-euro-sign")
      - @account.errors.full_messages_for(:initial_balance).each do |message|
        p.help.is-danger = message

  / share
  - unless params[:action] == "new" or params[:action] == "create"
    / shared with
    - unless form.object.users.count == 1
      .field
        = form.label :share, t(".share"), class: "label"
        - other_users(@current_user, form.object).each do |other_user|
          .field
            .control.is-expanded
              = form.fields_for :users, other_user do |shared_user|
                = shared_user.hidden_field :id
                = shared_user.email_field :email, class: "input", disabled: true
        .field
          .control
            = link_to icon_text("fa-solid fa-link-slash", t(".unlink")),
                      unlink_path(form.object),
                      data: { turbo_method: :delete, turbo_confirm: t(".are_you_sure_unlink") },
                      class: "button is-danger is-fullwidth"

    / pending user
    - if form.object.pending_user.blank?
      / propose a new sharing
      .field
        = label_tag :share, t(".propose_sharing"), class: "label"
        .control.has-icons-left
          = email_field_tag :new_share, nil, class: "input", placeholder: t(".shared_email")
          span.icon.is-left = icon("fa-solid fa-envelope")
        p.help = t(".explanation")
    - else
      / show me the pending user and propose to unlink him
      = form.fields_for :pending_user do |pending_user_fields|
        .field
          = pending_user_fields.label :pending_user, t(".pending_user"), class: "label"
          .field.has-addons
            .control
              = pending_user_fields.email_field :email, class: "input", disabled: true
            .control
              = link_to icon_text("fa-solid fa-arrow-rotate-left", t(".no_longer_propose")), unpend_path, data: { turbo_method: :delete }, class: "button is-warning"

  / hidden
  .field
    = form.label :hidden, t(".hidden"), class: "checkbox" do
      = form.check_box :hidden
      = " " + t(".hidden")

  / submit button
  .mt-5
    = form.submit class: "button is-success is-fullwidth"